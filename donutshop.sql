Create Database Donut
Go
 
Use Donut
Go

Create Table UserDonut
(
	userid INT IDENTITY(1,1) PRIMARY KEY,
	username  nvarchar(20) NOT NULL unique,
	userpass nvarchar(20) NOT NULL,
	userper int,
)
--donut
Create Table Donut
(
	donutname nvarchar(20) primary key,
	donutimg image,
	donutprice int not null,
	CONSTRAINT namedonut UNIQUE (donutname),
)

Create Table StatusDonut
(
	statusid nvarchar(20) references Donut(donutname) on delete cascade on update cascade,
	donutnumber int check(donutnumber>=0)
)



--vat tu
Create Table Vattu
(
	--vattuid int identity(1,1) primary key,
	vattuten nvarchar(20) not null unique,
	soluong int check(soluong>=0)
)

Create table hoadonnhap
(
	mahoadon nvarchar(20) primary key,
	hduserid nvarchar(20) references userdonut(username) on delete cascade on update cascade,
	ngay Date default getdate(),
)

Create Table cthoadonnhap
(
	idvattu nvarchar(20) references Vattu(vattuten) on delete no action on update cascade,
	mahoadon nvarchar(20) references hoadonnhap(mahoadon) on delete cascade on update cascade,
	soluong int check(soluong>0),
	gia int check(gia>0),
	
)

Create table hoadonban
(
	mahoadon nvarchar(20) primary key,
	hduserid nvarchar(20) references userdonut(username) on delete cascade on update cascade,
	ngay Date default getdate(),
)

Create Table cthoadonban
(
	iddonut nvarchar(20) references Donut(donutname) on delete cascade on update cascade,
	mahoadon nvarchar(20) references hoadonban(mahoadon) on delete cascade on update cascade,
	soluong int check(soluong>0),
	gia int check(gia>0),
	
)
drop table cthoadonban
Create Table CtGioHang
(
	ghuserid int references UserDonut(userid) on delete cascade on update cascade,
	ghdonutid nvarchar(20) references Donut(donutname) on delete cascade on update cascade,
	ghstatus nvarchar(20) check(ghstatus in ('cart','ordering','complete')),
	sl int check(sl>0),
)

Create Table TPdonut
(
	tpdonutid nvarchar(20) references Donut(donutname) on delete cascade on update cascade,
	vattuid nvarchar(20) references Vattu(vattuten) on delete cascade on update cascade ,
	sl float check(sl>0)
)

alter table vattu
add soluong int check(soluong>=0)
--------------========================================================================================================================----------------------------------------------------
--hành vi người dùng
create proc [dbo].[SP_AuthoLogin]
@Username nvarchar(20),																						
@Password nvarchar(20)
as
begin
    if exists (select * from UserDonut where username = @Username and userpass = @Password and userper = 1)
        select 1 as code
    else if exists (select * from UserDonut where username = @Username and userpass = @Password and userper = 2)
        select 2 as code
    else if exists (select * from UserDonut where username = @Username and userpass = @Password and userper = 3)
        select 3 as code
    else select 0 as code
end


--===========================================================================================================
Select donutname,donutimg,donutprice from donut
Insert into Donut values(N'Banana donut','
update donut set donutprice='120' where donutname='Banana donut'
delete donut where donutname='Apple donut'
--==============
select statusid,donutnumber from StatusDonut
Insert into StatusDonut values(N'Apple donut','5'),(N'Banana donut','5')
update StatusDonut set donutnumber=donutnumber+1 where statusid='Apple donut'
delete StatusDonut where statusid='Banana donut'
--=============
Select userid,username,userpass,userper from userdonut
Insert into UserDonut(username,userpass,userper) values('admin','admin','1'),
														('beft','admin','2'),
														('guest','admin','3')
update userdonut set userper='1' where userid='1'
Delete Userdonut where userid='1'
--==============
select vattuten,soluong from vattu
Insert into vattu values(N'sugar'),(N'pan'),(N'table'),(N'salt'),(N'chocolate')
delete vattu where vattuten='table'
update vattu set soluong='10' where vattuten='sugar'
--==============
select mahoadon,hduserid,ngay from hoadonnhap
Insert into hoadonnhap values('hd004','beft','2023-27-04')
delete hoadonnhap where mahoadon='hd003'
--==============
select mahoadon,hduserid,ngay from hoadonban
Insert into hoadonban values('guest-26/04/2023','guest','2023-04-26')
delete hoadonnhap where mahoadon='guest-26/04/2023'
--==============
select iddonut,mahoadon,soluong,gia from cthoadonban
Insert into cthoadonban values(N'Banana donut','guest-26/04/2023','3','10')
delete cthoadonban where mahoadon='guest-26/04/2023' and iddonut='Apple donut'
--==============
select idvattu,mahoadon,soluong,gia from cthoadonnhap
Insert into cthoadonnhap values(N'salt','hd003','3','10')
delete cthoadonnhap where mahoadon='hd002' and idvattu='sugar'
--==============
select ghdonutid,ghstatus,sl from CtGioHang where ghuserid='3'
Insert into CtGioHang values('3','Apple donut','cart','3')
delete CtGioHang where ghdonutid='Apple donut' and ghuserid='3'
--==============
select TPdonutid,vattuid,sl from TPdonut
Insert into TPdonut values('Apple donut','salt','2'),('Apple donut','sugar','2')
delete TPdonut where tpdonutid='Apple donut' and vattuid='salt'
--==============
select mahoadon,hduserid,ngay from
(select mahoadon,hduserid,ngay from hoadonban union all select mahoadon,hduserid,ngay from hoadonnhap) as nhap 
where hduserid='guest' or mahoadon='hd001'


Set xact_abort on
begin tran

declare @ten nvarchar(20)
declare @sl int
declare tro cursor
for (select vattuid,sl from TPdonut where tpdonutid=N'Apple donut')
open tro
fetch next from tro into @ten,@sl
while @@FETCH_STATUS=0
begin
	update vattu set soluong=soluong-@sl where vattuten=@ten
	fetch next from tro into @ten,@sl
end
close tro
deallocate tro

commit

select iddonut as id,mahoadon,soluong,gia from
(select iddonut,mahoadon,soluong,gia  from cthoadonban union all select idvattu,mahoadon,soluong,gia  from cthoadonnhap) as nhap 
where mahoadon='hd002'

select Month(ngay) as thang,sum(soluong*gia) as tong from hoadonban inner join cthoadonban on hoadonban.mahoadon=cthoadonban.mahoadon
group by Month(ngay)

select Month(ngay) as thang,sum(soluong*gia) as tong from hoadonnhap inner join cthoadonnhap on hoadonnhap.mahoadon=cthoadonnhap.mahoadon
group by Month(ngay)

select Day(ngay) as ngay,sum(soluong*gia) as tong from hoadonban inner join cthoadonban on hoadonban.mahoadon=cthoadonban.mahoadon
where Month(ngay)='6'
group by Day(ngay)

select Day(ngay) as ngay,sum(soluong*gia) as tong from hoadonnhap inner join cthoadonnhap on hoadonnhap.mahoadon=cthoadonnhap.mahoadon
where Month(ngay)='6'
group by Day(ngay)

select Day(ngay) as ngay,sum(soluong*gia) as tong from hoadonnhap inner join cthoadonnhap on hoadonnhap.mahoadon=cthoadonnhap.mahoadon
                            where Month(ngay)= 29
                            group by Day(ngay)

select donutnumber from statusdonut where statusid='Apple donut'

